//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub id: Uuid,
  pub email: String,
  pub password: String,
  pub created_at: DateTime,
  pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::profiles::Entity")]
  Profiles,
  #[sea_orm(has_many = "super::words::Entity")]
  Words,
}

impl Related<super::profiles::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Profiles.def()
  }
}

impl Related<super::words::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Words.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
